# Simple workflow for deploying static content to GitHub Pages
name: Deploy Pages

on:
  push:
    branches: [ "gh-pages" ]
#  release:
#    types: [published]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Latest Release
        uses: robinraju/release-downloader@v1.8
        with:
          latest: true
          fileName: "artifact.tar.gz"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Unzip Artifact
        run: |
          echo "----------- Before Unzip ( ls -la ${{ github.workspace }} ) -----------"
          ls -la ${{ github.workspace }}
          mkdir _site && tar -zxvf artifact.tar.gz -C _site >> /dev/null
          echo "----------- After Unzip ( ls -la ${{ github.workspace }}/_site | head -n 20 ) -----------"
          ls -la ${{ github.workspace }}/_site | head -n 20

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: ${{ github.workspace }}/_site
          name: github-pages
          retention-days: 1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
